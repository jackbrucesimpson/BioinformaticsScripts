#! /usr/bin/env python

#-------------------------------------------------------------------------------
# Name:        FindDigest
# Purpose:     Automatically retrieve a sequence and then see the fragment lengths generated by a digest
#
# Author:      Jack Simpson
#
# Created:     11/04/2013
#-------------------------------------------------------------------------------

from Bio import Entrez
from Bio import SeqIO
from Bio.Restriction import Restriction
from Bio.Restriction import RestrictionBatch

email="my@email.com"
Entrez.email = email
fetch_seq = Entrez.efetch(db="nucleotide", rettype="fasta",retmode="text", id="294489415")
seq_record = SeqIO.read(fetch_seq, "fasta")
fetch_seq.close()

# To see how a specific restriction enzyme (Sau3AI) would digest your sequence:
print("Restriction site is", Restriction.Sau3AI.site)
digest = Restriction.Sau3AI.catalyse(seq_record.seq)
print ("Number of fragments is", len(digest))
print "------\nLengths of each fragment\n------"
for lengths in digest:
	print len(lengths)

# Run every restriction enzyme in the New England Biolabs database against the sequence
rb_supp = RestrictionBatch(first=[], suppliers=['N'])
for rest in rb_supp.search(seq_record.seq):
	# The code commented out below will only show restriction enzymes that created a number of fragments between 10 and 40
    #if len(rb_supp.search(seq_record.seq)[rest]) > 10 and len(rb_supp.search(seq_record.seq)[rest]) < 40:
    # This will show every restriction ezyme that was able to digest the sequence in some way.
    if len(rb_supp.search(seq_record.seq)[rest]) > 0:
        print rest, ":", rb_supp.search(seq_record.seq)[rest]